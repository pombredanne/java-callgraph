diff --git a/convex-core/pom.xml b/convex-core/pom.xml
index 471f81bf..3f83db91 100644
--- a/convex-core/pom.xml
+++ b/convex-core/pom.xml
@@ -32,6 +32,59 @@
 					</execution>
 				</executions>
 			</plugin>
+			<plugin>
+				<groupId>org.jacoco</groupId>
+				<artifactId>jacoco-maven-plugin</artifactId>
+				<version>0.8.6</version>
+				<executions>
+					<execution>
+						<id>default-prepare-agent</id>
+						<goals>
+							<goal>prepare-agent</goal>
+						</goals>
+					</execution>
+					<execution>
+						<id>jacoco-report</id>
+						<phase>test</phase>
+						<goals>
+							<goal>report</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-assembly-plugin</artifactId>
+				<version>3.3.0</version>
+
+				<configuration>
+					<descriptorRefs>
+						<descriptorRef>jar-with-dependencies</descriptorRef>
+					</descriptorRefs>
+				</configuration>
+
+				<executions>
+					<execution>
+						<id>make-assembly</id>
+						<phase>package</phase>
+						<goals>
+							<goal>single</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
+			<plugin>
+				<groupId>org.apache.maven.plugins</groupId>
+				<artifactId>maven-jar-plugin</artifactId>
+				<version>3.2.0</version>
+				<executions>
+					<execution>
+						<goals>
+							<goal>test-jar</goal>
+						</goals>
+					</execution>
+				</executions>
+			</plugin>
 		</plugins>
 		<resources>
 			<resource>
@@ -44,6 +97,22 @@
 		</resources>
 	</build>
 
+	<reporting>
+		<plugins>
+			<plugin>
+				<groupId>org.jacoco</groupId>
+				<artifactId>jacoco-maven-plugin</artifactId>
+				<reportSets>
+					<reportSet>
+						<reports>
+							<report>report</report>
+						</reports>
+					</reportSet>
+				</reportSets>
+			</plugin>
+		</plugins>
+	</reporting>
+
 	<dependencies>
 		<dependency>
 			<groupId>org.bouncycastle</groupId>
diff --git a/convex-core/src/test/java/convex/test/generators/PrimitiveGen.java b/convex-core/src/test/java/convex/test/generators/PrimitiveGen.java
index 1eba23e1..045f17d6 100644
--- a/convex-core/src/test/java/convex/test/generators/PrimitiveGen.java
+++ b/convex-core/src/test/java/convex/test/generators/PrimitiveGen.java
@@ -5,6 +5,7 @@ import com.pholser.junit.quickcheck.generator.Generator;
 import com.pholser.junit.quickcheck.random.SourceOfRandomness;
 
 import convex.core.data.ACell;
+import convex.core.data.Blob;
 import convex.core.data.prim.CVMBool;
 import convex.core.data.prim.CVMByte;
 import convex.core.data.prim.CVMChar;
@@ -16,6 +17,8 @@ import convex.core.data.prim.CVMLong;
  */
 public class PrimitiveGen extends Generator<ACell> {
 	public final static PrimitiveGen INSTANCE = new PrimitiveGen();
+	private static final int ONE_KB = 1024;
+	private static final int ONE_MB = ONE_KB * 1024;
 
 	// public final Generator<Byte> BYTE = gen().type(byte.class);
 
@@ -25,7 +28,7 @@ public class PrimitiveGen extends Generator<ACell> {
 
 	@Override
 	public ACell generate(SourceOfRandomness r, GenerationStatus status) {
-		int type = r.nextInt(6);
+		int type = r.nextInt(7);
 		switch (type) {
 		case 0:
 			return null;
@@ -39,8 +42,38 @@ public class PrimitiveGen extends Generator<ACell> {
 			return CVMDouble.create(r.nextDouble());
 		case 5:
 			return CVMBool.create(r.nextBoolean());
+		case 6:
+			return Blob.create(r.nextBytes(getByteSize(r)));
 		default:
 			throw new Error("Unexpected type: " + type);
 		}
 	}
+
+	private static int getByteSize(SourceOfRandomness r) {
+		int rnd = r.nextInt(1, 100);
+
+		// 1% change of getting number 0
+		if (rnd == 1) {
+			return 0;
+		}
+
+		// 1% change of getting number 1
+		if (rnd == 2) {
+			return 1;
+		}
+
+		// 15% chance of getting a "larger" size
+		if (rnd >= 3 && rnd <= 17) {
+			return r.nextInt(ONE_KB * 4, ONE_KB * 100);
+		}
+
+		// 5% chance of getting a "huge" size
+		if (rnd >= 18 && rnd <= 22) {
+			return r.nextInt(ONE_KB * 100, ONE_MB);
+		}
+
+		// 78% - normalish size
+		return r.nextInt(2, ONE_KB * 4);
+	}
+
 }
